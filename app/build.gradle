apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyy_MM_dd_HHmm", TimeZone.getTimeZone("GMT+08:00"))
}

/**
 * 读取版本配置
 */
def Properties mVersionProps = getProperty();
/**
 * 读取版本名
 */
def String mVersionCode = mVersionProps['VERSION_CODE'];
/**
 * 读取版本名
 */
def String mVersionName = mVersionProps['VERSION_NAME'];
/**
 * 模式
 */
def String mModelOnline = String.valueOf(mVersionProps['MODEL_ONLINE']);
/**
 * 日志调试模式
 */
def String mModelDebug = String.valueOf(mVersionProps['MODEL_DEBUG']);
/**
 * 构建编号
 */
def String mBuildCode = String.valueOf(mVersionProps['BUILD_CODE']);
/**
 * 编译apk文件名称
 */
def String mBuildName = String.valueOf(mVersionProps['BUILD_NAME']);
/**
 * 指定输出目录
 */
def mOutputDir = "${rootDir}/app/build/outputs/apk";
/**
 * 腾讯buglyId
 */
def mBuglyAppID = String.valueOf(mVersionProps['BUGLY_APPID'])

android {
    compileSdkVersion 27

    signingConfigs {
        release {
            storeFile file('../docs/victor_keystore.jks')
            storePassword "android"
            keyAlias "victor"
            keyPassword "android"
            v2SigningEnabled false  //禁用v2签名方式
        }
    }


    defaultConfig {
        applicationId "com.victor.ranch"
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "int", "BUILD_CODE", mBuildCode

        renderscriptTargetApi 26
        renderscriptSupportModeEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
    }

    buildTypes {
        release {
            //Zipalign优化
            zipAlignEnabled true
            //去掉无用资源
            shrinkResources true
            //混淆
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "boolean", "MODEL_ONLINE", "true"
            buildConfigField "boolean", "MODEL_DEBUG", "false"
            manifestPlaceholders = [BUGLY_APPID      : "${mBuglyAppID}", BUGLY_APP_VERSION: "${mVersionName}",
                                    BUGLY_APP_CHANNEL: "main", BUGLY_ENABLE_DEBUG: "false"]
        }
        debug {
            signingConfig signingConfigs.release
            buildConfigField "boolean", "MODEL_ONLINE", "false"
            buildConfigField "boolean", "MODEL_DEBUG", "true"
            manifestPlaceholders = [BUGLY_APPID      : "${mBuglyAppID}dev", BUGLY_APP_VERSION: "${mVersionName}",
                                    BUGLY_APP_CHANNEL: "main", BUGLY_ENABLE_DEBUG: "true"]
        }
    }

    repositories {
        flatDir {
            dirs 'libs'   // aar目录
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    //移除lint检测的error
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/java'
    }

    flavorDimensions 'main'
    productFlavors {
        main {
            dimension 'main'
            // 每个环境包名不同
            applicationId "com.victor.ranch"
            //注意，这里是添加，在 string.xml 不能有这个字段，会重名！！！
//            resValue "string", "app_name", "FunnyClips"
            // 动态修改 常量 字段
            buildConfigField "boolean", "MODEL_ONLINE", "true"
            buildConfigField "boolean", "MODEL_DEBUG", "false"
            manifestPlaceholders = [BUGLY_APPID      : "${mBuglyAppID}", BUGLY_APP_VERSION: "${mVersionName}",
                                    BUGLY_APP_CHANNEL: "main", BUGLY_ENABLE_DEBUG: "false"]
        }
    }

    // 自定义输出配置，这里我们加上APK版本号1.0
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "${mBuildName}_v${defaultConfig.versionName}_${mBuildCode}_${variant.productFlavors[0].name}.apk"
        }
    }
}

/**
 * 获取构建版本
 * @return
 */
def getProperty() {
    def Properties buildProps = new Properties()
    buildProps.load(new FileInputStream(file('../docs/build.properties')))
    return buildProps;
}
/**
 * 打包成功之后
 * 输出相应的日志记录
 * 保留此次打包的记录
 * 包括版本名称
 * 构建时间
 * 提交记录等
 */
def buildLog(String output, String vName, String vCode, String buildVerCode, String modelOnline, String modelDebug) {
    File outputFile = new File(output)
    if (!outputFile.exists())
        outputFile.mkdirs()
    FileWriter fw = new FileWriter(output + File.separator + "log.txt")
    StringBuilder builder = new StringBuilder();
    builder.append("[构建时间]=" + releaseTime())
    builder.append("\r\n")
    builder.append("[版本编号]=" + vCode)
    builder.append("\r\n")
    builder.append("[版本名称]=" + vName)
    builder.append("\r\n")
    builder.append("[编译版本]=" + buildVerCode)
    builder.append("\r\n")
    builder.append("[线上环境]=" + modelOnline)
    builder.append("\r\n")
    builder.append("[调试模式]=" + modelDebug)
    fw.write(builder.toString())
    fw.flush();
    fw.close();

}

build {
    doLast {
        buildLog(mOutputDir, mVersionName, mVersionCode, mBuildCode, mModelOnline, mModelDebug)
        copy {
            from "$buildDir/outputs/mapping"
            into mOutputDir
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'

    //注解库
    implementation 'com.jakewharton:butterknife:7.0.1'
    //app自动检测升级库
    implementation 'com.github.Victor2018:AppUpdateLib:v1.9'
    //屏幕适配库
    implementation 'com.github.Victor2018:ScreenMatchLib:v1.1'
    //网络请求库
    implementation 'com.github.Victor2018:OKHttpLib:v1.3'
    //播放器
    implementation 'com.github.Victor2018:SeagullPlayer:v1.7'
    //6.0权限动态申请库
    implementation 'com.github.Victor2018:PermissionHelper:v1.0'
    //crash日志捕获
    implementation 'com.github.Victor2018:CrashSpiderLib:v1.3'

    //fastjson库
    implementation 'com.alibaba:fastjson:1.1.56.android'
    //图片加载glide库
    implementation "com.github.bumptech.glide:glide:4.5.0"
    //腾讯bugly崩溃日志收集
    implementation 'com.tencent.bugly:crashreport:latest.release'
    //支付宝
    implementation(name: 'alipaySdk-15.7.4-20200228192259', ext: 'aar')
    //微信
    implementation files('libs/libammsdk.jar')
    //RxBus
    implementation 'com.hwangjr.rxbus:rxbus:1.0.5'

}
